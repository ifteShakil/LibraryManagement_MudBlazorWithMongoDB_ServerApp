
@using MudBlazorWebApp5.Models
@inject MudBlazorWebApp5.IService.IPublisherService PublisherService

<MudDialog>
    <DialogContent>
        <MudCard>
            <EditForm Model="@publisher">
                <MudGrid>
                    <MudItem xs="12" sm="12">
                        <MudCard>
                            <MudCardContent>
                                <MudTextField @bind-Value="publisher.CompanyName" For="@(() => publisher.CompanyName)" Immediate="true" Label="Company Name" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                                <MudTextField @bind-Value="publisher.Name" For="@(() => publisher.Name)" Immediate="true" Label="Name" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                                <MudTextField @bind-Value="publisher.Designation" For="@(() => publisher.Designation)" Immediate="true" Label="Designation" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                                <MudTextField @bind-Value="publisher.PhoneNumber" For="@(() => publisher.PhoneNumber)" Immediate="true" Label="Phone Number" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                                <MudTextField @bind-Value="publisher.Email" For="@(() => publisher.Email)" Immediate="true" Label="Email" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                                <MudTextField @bind-Value="publisher.Address" For="@(() => publisher.Address)" Immediate="true" Label="Address" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                                <MudTextField @bind-Value="publisher.ReasonOfCommunication" For="@(() => publisher.ReasonOfCommunication)" Immediate="true" Label="Reason Of Communication" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                                <MudTextField @bind-Value="publisher.OtherInfo" For="@(() => publisher.OtherInfo)" Immediate="true" Label="Other Info" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                                <MudTextField @bind-Value="publisher.Instruction" For="@(() => publisher.Instruction)" Immediate="true" Label="Instruction" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>


                            </MudCardContent>
                             <MudCardActions>
                                <MudButton OnClick="Cancel">Cancel</MudButton>
                                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" @onclick="UpdatePublisher">Edit</MudButton>
                           
                            </MudCardActions> 
                             
                        </MudCard>
                    </MudItem>
                </MudGrid>
            </EditForm>
        </MudCard>
    </DialogContent>
   
</MudDialog>


@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Inject] ISnackbar Snackbar { get; set; }
    [Parameter]
    public string PublisherId { get; set; }
    Publisher publisher = new Publisher();


    protected override async Task OnInitializedAsync()
    {
        publisher = await PublisherService.GetPublisherById(PublisherId);
    }

    private async Task UpdatePublisher()
    {
        
        try
        {
            await PublisherService.UpdatePublisher(publisher);

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error updating Publisher: {ex.Message}");
        }

        Snackbar.Add("Edit Success!");
        MudDialog.Close(DialogResult.Ok(true));
    }


    void Cancel() => MudDialog.Cancel();

}